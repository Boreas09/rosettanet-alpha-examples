'use client'
import { Geist, Geist_Mono } from "next/font/google";
import { Provider } from "@/components/ui/provider"
import '@rainbow-me/rainbowkit/styles.css';
import {
  getDefaultConfig,
  RainbowKitProvider,
} from '@rainbow-me/rainbowkit';
import { WagmiProvider } from 'wagmi';
import {
  mainnet,
  polygon,
  optimism,
  arbitrum,
  base,
} from 'wagmi/chains';
import {
  QueryClientProvider,
  QueryClient,
} from "@tanstack/react-query";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const rosettanetChain = {
  id:1381192787,
  name: 'Rosettanet',
  nativeCurrency: {
    name: 'Starknet Token', symbol: 'STRK', decimals: '18'
  },
  rpcUrls: {
    default: {
      http: ['http://localhost:3000']
    }
  },
  blockExplorers: { 
    default: { name: 'Voyager', url: 'https://sepolia.voyager.online' }
  },
}

const config = getDefaultConfig({
  appName: 'My RainbowKit App',
  projectId: 'YOUR_PROJECT_ID',
  chains: [rosettanetChain],
  ssr: true, // If your dApp uses server side rendering (SSR)
});

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const queryClient = new QueryClient();
export default function RootLayout({ children }) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
      <Provider>
        <WagmiProvider config={config}>
        <QueryClientProvider client={queryClient}>
          <RainbowKitProvider>
          {children}
          </RainbowKitProvider>
        </QueryClientProvider>
      </WagmiProvider>
      </Provider>
      </body>
    </html>
  );
}
